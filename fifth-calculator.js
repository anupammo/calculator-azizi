function stepOne() {
    let r3c1, r4c1, r1c2, r2c2, r3c2, r4c2, r1c3, r2c3, r3c3, r4c3, r1c4, r2c4, r3c4, r4c4, r1c5, r2c5, r3c5, r4c5;
    let goldGrowth, inflationRate;
    let goldP2023, goldP2024, goldP2025, goldP2026, goldP2027;
    let fxRate2023, fxRate2024, fxRate2025, fxRate2026, fxRate2027;
    let qmBuyRM2023, qmBuyRM2024, qmBuyRM2025, qmBuyRM2026, qmBuyRM2027;
    let qmSellRM2023, qmSellRM2024, qmSellRM2025, qmSellRM2026, qmSellRM2027;
    const qmSellval = 1.07;
    // Table One
    const ftbl = document.getElementById("ftbl");
    goldGrowth = parseFloat(document.getElementById("gold-growth").value);
    inflationRate = parseFloat(document.getElementById("inflation-rate").value);
    goldP2023 = parseFloat(document.getElementById("goldSpotPrice").value);
    goldP2024 = (goldP2023 + ((goldP2023 * goldGrowth) / 100));
    ftbl.rows[1].cells[2].innerHTML = "$ " + (goldP2024).toFixed(2);
    goldP2025 = (goldP2024 + ((goldP2024 * goldGrowth) / 100));
    ftbl.rows[1].cells[3].innerHTML = "$ " + (goldP2025).toFixed(2);
    goldP2026 = (goldP2025 + ((goldP2025 * goldGrowth) / 100));
    ftbl.rows[1].cells[4].innerHTML = "$ " + (goldP2026).toFixed(2);
    goldP2027 = (goldP2026 + ((goldP2026 * goldGrowth) / 100));
    ftbl.rows[1].cells[5].innerHTML = "$ " + (goldP2027).toFixed(2);

    fxRate2023 = parseFloat(document.getElementById("fxrateUsdMyr").value);
    fxRate2024 = (fxRate2023 + ((fxRate2023 * inflationRate) / 100));
    ftbl.rows[2].cells[2].innerHTML = "RM " + (fxRate2024).toFixed(3);
    fxRate2025 = (fxRate2024 + ((fxRate2024 * inflationRate) / 100));
    ftbl.rows[2].cells[3].innerHTML = "RM " + (fxRate2025).toFixed(3);
    fxRate2026 = (fxRate2025 + ((fxRate2025 * inflationRate) / 100));
    ftbl.rows[2].cells[4].innerHTML = "RM " + (fxRate2026).toFixed(3);
    fxRate2027 = (fxRate2026 + ((fxRate2026 * inflationRate) / 100));
    ftbl.rows[2].cells[5].innerHTML = "RM " + (fxRate2027).toFixed(3);

    qmBuyRM2023 = (goldP2023 * fxRate2023);
    ftbl.rows[3].cells[1].innerHTML = "RM " + (qmBuyRM2023).toFixed(2);
    qmBuyRM2024 = (goldP2024 * fxRate2024);
    ftbl.rows[3].cells[2].innerHTML = "RM " + (qmBuyRM2024).toFixed(2);
    qmBuyRM2025 = (goldP2025 * fxRate2025);
    ftbl.rows[3].cells[3].innerHTML = "RM " + (qmBuyRM2025).toFixed(2);
    qmBuyRM2026 = (goldP2026 * fxRate2026);
    ftbl.rows[3].cells[4].innerHTML = "RM " + (qmBuyRM2026).toFixed(2);
    qmBuyRM2027 = (goldP2027 * fxRate2027);
    ftbl.rows[3].cells[5].innerHTML = "RM " + (qmBuyRM2027).toFixed(2);

    qmSellRM2023 = (qmBuyRM2023 * qmSellval);
    ftbl.rows[4].cells[1].innerHTML = "RM " + (qmSellRM2023).toFixed(2);
    qmSellRM2024 = (qmBuyRM2024 * qmSellval);
    ftbl.rows[4].cells[2].innerHTML = "RM " + (qmSellRM2024).toFixed(2);
    qmSellRM2025 = (qmBuyRM2025 * qmSellval);
    ftbl.rows[4].cells[3].innerHTML = "RM " + (qmSellRM2025).toFixed(2);
    qmSellRM2026 = (qmBuyRM2026 * qmSellval);
    ftbl.rows[4].cells[4].innerHTML = "RM " + (qmSellRM2026).toFixed(2);
    qmSellRM2027 = (qmBuyRM2027 * qmSellval);
    ftbl.rows[4].cells[5].innerHTML = "RM " + (qmSellRM2027).toFixed(2);
    // Table Two
    let sb1, sb2, sb3, sb4, sb5, sb6, sb7, sb8, sb9, sb10, sb11, sb12;
    let hb1, hb2, hb3, hb4, hb5, hb6, hb7, hb8, hb9, hb10, hb11, hb12;
    let nilai1, nilai2, nilai3, nilai4, nilai5, nilai6, nilai7, nilai8, nilai9, nilai10, nilai11, nilai12;
    let vfs1, vfs2, vfs3, vfs4, vfs5, vfs6, vfs7, vfs8, vfs9, vfs10, vfs11, vfs12;
    let hg1, hg2, hg3, hg4, hg5, hg6, hg7, hg8, hg9, hg10, hg11, hg12;
    let mfone1, mfone2, mfone3, mfone4, mfone5, mfone6, mfone7, mfone8, mfone9, mfone10, mfone11, mfone12;
    let mftwo1, mftwo2, mftwo3, mftwo4, mftwo5, mftwo6, mftwo7, mftwo8, mftwo9, mftwo10, mftwo11, mftwo12;
    let mft1, mft2, mft3, mft4, mft5, mft6, mft7, mft8, mft9, mft10, mft11, mft12;
    let mffour1, mffour2, mffour3, mffour4, mffour5, mffour6, mffour7, mffour8, mffour9, mffour10, mffour11, mffour12;
    let mffive1, mffive2, mffive3, mffive4, mffive5, mffive6, mffive7, mffive8, mffive9, mffive10, mffive11, mffive12;
    let mftotal1, mftotal2, mftotal3, mftotal4, mftotal5, mftotal6, mftotal7, mftotal8, mftotal9, mftotal10, mftotal11, mftotal12;
    let np1, np2, np3, np4, np5, np6, np7, np8, np9, np10, np11, np12;
    let gain1, gain2, gain3, gain4, gain5, gain6, gain7, gain8, gain9, gain10, gain11, gain12;
    let tgain1, tgain2, tgain3, tgain4, tgain5, tgain6, tgain7, tgain8, tgain9, tgain10, tgain11, tgain12;
    const stbl = document.getElementById("stbl");
    const mfr = .035;
    const p85 = .85;
    const p9 = .09;
    sb1 = parseInt(document.getElementById("month1").value);
    sb2 = parseInt(document.getElementById("month2").value);
    sb3 = parseInt(document.getElementById("month3").value);
    sb4 = parseInt(document.getElementById("month4").value);
    sb5 = parseInt(document.getElementById("month5").value);
    sb6 = parseInt(document.getElementById("month5").value);
    sb7 = parseInt(document.getElementById("month7").value);
    sb8 = parseInt(document.getElementById("month8").value);
    sb9 = parseInt(document.getElementById("month9").value);
    sb10 = parseInt(document.getElementById("month10").value);
    sb11 = parseInt(document.getElementById("month11").value);
    sb12 = parseInt(document.getElementById("month12").value);
    // Coloumn : Saving 
    hb1 = (sb1 / qmSellRM2023);
    stbl.rows[4].cells[2].innerHTML = (hb1).toFixed(4) + "g";
    hb2 = (sb2 / qmSellRM2023);
    stbl.rows[5].cells[2].innerHTML = (hb2).toFixed(4) + "g";
    hb3 = (sb3 / qmSellRM2023);
    stbl.rows[6].cells[2].innerHTML = (hb3).toFixed(4) + "g";
    hb4 = (sb4 / qmSellRM2023);
    stbl.rows[7].cells[2].innerHTML = (hb4).toFixed(4) + "g";
    hb5 = (sb5 / qmSellRM2023);
    stbl.rows[8].cells[2].innerHTML = (hb5).toFixed(4) + "g";
    hb6 = (sb6 / qmSellRM2023);
    stbl.rows[9].cells[2].innerHTML = (hb6).toFixed(4) + "g";
    hb7 = (sb7 / qmSellRM2023);
    stbl.rows[10].cells[2].innerHTML = (hb7).toFixed(4) + "g";
    hb8 = (sb8 / qmSellRM2023);
    stbl.rows[11].cells[2].innerHTML = (hb8).toFixed(4) + "g";
    hb9 = (sb9 / qmSellRM2023);
    stbl.rows[12].cells[2].innerHTML = (hb9).toFixed(4) + "g";
    hb10 = (sb10 / qmSellRM2023);
    stbl.rows[13].cells[2].innerHTML = (hb10).toFixed(4) + "g";
    hb11 = (sb11 / qmSellRM2023);
    stbl.rows[14].cells[2].innerHTML = (hb11).toFixed(4) + "g";
    hb12 = (sb12 / qmSellRM2023);
    stbl.rows[15].cells[2].innerHTML = (hb12).toFixed(4) + "g";
    // Coloumn : 100% holding 
    nilai1 = (sb1 * p85);
    stbl.rows[4].cells[3].innerHTML = "RM" + (nilai1);
    nilai2 = (sb2 * p85);
    stbl.rows[5].cells[3].innerHTML = "RM" + (nilai2);
    nilai3 = (sb3 * p85);
    stbl.rows[6].cells[3].innerHTML = "RM" + (nilai3);
    nilai4 = (sb4 * p85);
    stbl.rows[7].cells[3].innerHTML = "RM" + (nilai4);
    nilai5 = (sb5 * p85);
    stbl.rows[8].cells[3].innerHTML = "RM" + (nilai5);
    nilai6 = (sb6 * p85);
    stbl.rows[9].cells[3].innerHTML = "RM" + (nilai6);
    nilai7 = (sb7 * p85);
    stbl.rows[10].cells[3].innerHTML = "RM" + (nilai7);
    nilai8 = (sb8 * p85);
    stbl.rows[11].cells[3].innerHTML = "RM" + (nilai8);
    nilai9 = (sb9 * p85);
    stbl.rows[12].cells[3].innerHTML = "RM" + (nilai9);
    nilai10 = (sb10 * p85);
    stbl.rows[13].cells[3].innerHTML = "RM" + (nilai10);
    nilai11 = (sb11 * p85);
    stbl.rows[14].cells[3].innerHTML = "RM" + (nilai11);
    nilai12 = (sb12 * p85);
    stbl.rows[15].cells[3].innerHTML = "RM" + (nilai12);
    // Coloumn : NILAI CONVERT 85% 
    vfs1 = (sb1 - nilai1);
    stbl.rows[4].cells[4].innerHTML = "RM" + (vfs1);
    vfs2 = (sb2 - nilai2);
    stbl.rows[5].cells[4].innerHTML = "RM" + (vfs2);
    vfs3 = (sb3 - nilai3);
    stbl.rows[6].cells[4].innerHTML = "RM" + (vfs3);
    vfs4 = (sb4 - nilai4);
    stbl.rows[7].cells[4].innerHTML = "RM" + (vfs4);
    vfs5 = (sb5 - nilai5);
    stbl.rows[8].cells[4].innerHTML = "RM" + (vfs5);
    vfs6 = (sb6 - nilai6);
    stbl.rows[9].cells[4].innerHTML = "RM" + (vfs6);
    vfs7 = (sb7 - nilai7);
    stbl.rows[10].cells[4].innerHTML = "RM" + (vfs7);
    vfs8 = (sb8 - nilai8);
    stbl.rows[11].cells[4].innerHTML = "RM" + (vfs8);
    vfs9 = (sb9 - nilai9);
    stbl.rows[12].cells[4].innerHTML = "RM" + (vfs9);
    vfs10 = (sb10 - nilai10);
    stbl.rows[13].cells[4].innerHTML = "RM" + (vfs10);
    vfs11 = (sb11 - nilai11);
    stbl.rows[14].cells[4].innerHTML = "RM" + (vfs11);
    vfs12 = (sb12 - nilai12);
    stbl.rows[15].cells[4].innerHTML = "RM" + (vfs12);
    // Coloumn : 9% in holding GOLD
    hg1 = (hb1 * p9);
    stbl.rows[4].cells[5].innerHTML = (hg1).toFixed(4) + "g";
    hg2 = (hb2 * p9);
    stbl.rows[5].cells[5].innerHTML = (hg2).toFixed(4) + "g";
    hg3 = (hb3 * p9);
    stbl.rows[6].cells[5].innerHTML = (hg3).toFixed(4) + "g";
    hg4 = (hb4 * p9);
    stbl.rows[7].cells[5].innerHTML = (hg4).toFixed(4) + "g";
    hg5 = (hb5 * p9);
    stbl.rows[8].cells[5].innerHTML = (hg5).toFixed(4) + "g";
    hg6 = (hb6 * p9);
    stbl.rows[9].cells[5].innerHTML = (hg6).toFixed(4) + "g";
    hg7 = (hb7 * p9);
    stbl.rows[10].cells[5].innerHTML = (hg7).toFixed(4) + "g";
    hg8 = (hb8 * p9);
    stbl.rows[11].cells[5].innerHTML = (hg8).toFixed(4) + "g";
    hg9 = (hb9 * p9);
    stbl.rows[12].cells[5].innerHTML = (hg9).toFixed(4) + "g";
    hg10 = (hb10 * p9);
    stbl.rows[13].cells[5].innerHTML = (hg10).toFixed(4) + "g";
    hg11 = (hb11 * p9);
    stbl.rows[14].cells[5].innerHTML = (hg11).toFixed(4) + "g";
    hg12 = (hb12 * p9);
    stbl.rows[15].cells[5].innerHTML = (hg12).toFixed(4) + "g";
    // Coloumn : MF 3.5% Year 1
    mfone1 = (((nilai1 * mfr) / 12) * 12);
    stbl.rows[4].cells[6].innerHTML = "RM" + (mfone1).toFixed(0);
    mfone2 = (((nilai2 * mfr) / 12) * 11);
    stbl.rows[5].cells[6].innerHTML = "RM" + (mfone2).toFixed(0);
    mfone3 = (((nilai3 * mfr) / 12) * 10);
    stbl.rows[6].cells[6].innerHTML = "RM" + (mfone3).toFixed(0);
    mfone4 = (((nilai4 * mfr) / 12) * 9);
    stbl.rows[7].cells[6].innerHTML = "RM" + (mfone4).toFixed(0);
    mfone5 = (((nilai5 * mfr) / 12) * 8);
    stbl.rows[8].cells[6].innerHTML = "RM" + (mfone5).toFixed(0);
    mfone6 = (((nilai6 * mfr) / 12) * 7);
    stbl.rows[9].cells[6].innerHTML = "RM" + (mfone6).toFixed(0);
    mfone7 = (((nilai7 * mfr) / 12) * 6);
    stbl.rows[10].cells[6].innerHTML = "RM" + (mfone7).toFixed(0);
    mfone8 = (((nilai8 * mfr) / 12) * 5);
    stbl.rows[11].cells[6].innerHTML = "RM" + (mfone8).toFixed(0);
    mfone9 = (((nilai9 * mfr) / 12) * 4);
    stbl.rows[12].cells[6].innerHTML = "RM" + (mfone9).toFixed(0);
    mfone10 = (((nilai10 * mfr) / 12) * 3);
    stbl.rows[13].cells[6].innerHTML = "RM" + (mfone10).toFixed(0);
    mfone11 = (((nilai11 * mfr) / 12) * 2);
    stbl.rows[14].cells[6].innerHTML = "RM" + (mfone11).toFixed(0);
    mfone12 = (((nilai12 * mfr) / 12) * 1);
    stbl.rows[15].cells[6].innerHTML = "RM" + (mfone12).toFixed(0);
    // Coloumn : MF 3.5% Year 2
    mftwo1 = (nilai1 * mfr);
    stbl.rows[4].cells[7].innerHTML = "RM" + (mftwo1).toFixed(0);
    mftwo2 = (nilai2 * mfr);
    stbl.rows[5].cells[7].innerHTML = "RM" + (mftwo2).toFixed(0);
    mftwo3 = (nilai3 * mfr);
    stbl.rows[6].cells[7].innerHTML = "RM" + (mftwo3).toFixed(0);
    mftwo4 = (nilai4 * mfr);
    stbl.rows[7].cells[7].innerHTML = "RM" + (mftwo4).toFixed(0);
    mftwo5 = (nilai5 * mfr);
    stbl.rows[8].cells[7].innerHTML = "RM" + (mftwo5).toFixed(0);
    mftwo6 = (nilai6 * mfr);
    stbl.rows[9].cells[7].innerHTML = "RM" + (mftwo6).toFixed(0);
    mftwo7 = (nilai7 * mfr);
    stbl.rows[10].cells[7].innerHTML = "RM" + (mftwo7).toFixed(0);
    mftwo8 = (nilai8 * mfr);
    stbl.rows[11].cells[7].innerHTML = "RM" + (mftwo8).toFixed(0);
    mftwo9 = (nilai9 * mfr);
    stbl.rows[12].cells[7].innerHTML = "RM" + (mftwo9).toFixed(0);
    mftwo10 = (nilai10 * mfr);
    stbl.rows[13].cells[7].innerHTML = "RM" + (mftwo10).toFixed(0);
    mftwo11 = (nilai11 * mfr);
    stbl.rows[14].cells[7].innerHTML = "RM" + (mftwo11).toFixed(0);
    mftwo12 = (nilai12 * mfr);
    stbl.rows[15].cells[7].innerHTML = "RM" + (mftwo12).toFixed(0);
    // Coloumn : MF 3.5% Year 3
    mft1 = (nilai1 * mfr);
    stbl.rows[4].cells[8].innerHTML = "RM" + (mft1).toFixed(0);
    mft2 = (nilai2 * mfr);
    stbl.rows[5].cells[8].innerHTML = "RM" + (mft2).toFixed(0);
    mft3 = (nilai3 * mfr);
    stbl.rows[6].cells[8].innerHTML = "RM" + (mft3).toFixed(0);
    mft4 = (nilai4 * mfr);
    stbl.rows[7].cells[8].innerHTML = "RM" + (mft4).toFixed(0);
    mft5 = (nilai5 * mfr);
    stbl.rows[8].cells[8].innerHTML = "RM" + (mft5).toFixed(0);
    mft6 = (nilai6 * mfr);
    stbl.rows[9].cells[8].innerHTML = "RM" + (mft6).toFixed(0);
    mft7 = (nilai7 * mfr);
    stbl.rows[10].cells[8].innerHTML = "RM" + (mft7).toFixed(0);
    mft8 = (nilai8 * mfr);
    stbl.rows[11].cells[8].innerHTML = "RM" + (mft8).toFixed(0);
    mft9 = (nilai9 * mfr);
    stbl.rows[12].cells[8].innerHTML = "RM" + (mft9).toFixed(0);
    mft10 = (nilai10 * mfr);
    stbl.rows[13].cells[8].innerHTML = "RM" + (mft10).toFixed(0);
    mft11 = (nilai11 * mfr);
    stbl.rows[14].cells[8].innerHTML = "RM" + (mft11).toFixed(0);
    mft12 = (nilai12 * mfr);
    stbl.rows[15].cells[8].innerHTML = "RM" + (mft12).toFixed(0);
    // Coloumn : MF 3.5% Year 4
    mffour1 = (nilai1 * mfr);
    stbl.rows[4].cells[9].innerHTML = "RM" + (mffour1).toFixed(0);
    mffour2 = (nilai2 * mfr);
    stbl.rows[5].cells[9].innerHTML = "RM" + (mffour2).toFixed(0);
    mffour3 = (nilai3 * mfr);
    stbl.rows[6].cells[9].innerHTML = "RM" + (mffour3).toFixed(0);
    mffour4 = (nilai4 * mfr);
    stbl.rows[7].cells[9].innerHTML = "RM" + (mffour4).toFixed(0);
    mffour5 = (nilai5 * mfr);
    stbl.rows[8].cells[9].innerHTML = "RM" + (mffour5).toFixed(0);
    mffour6 = (nilai6 * mfr);
    stbl.rows[9].cells[9].innerHTML = "RM" + (mffour6).toFixed(0);
    mffour7 = (nilai7 * mfr);
    stbl.rows[10].cells[9].innerHTML = "RM" + (mffour7).toFixed(0);
    mffour8 = (nilai8 * mfr);
    stbl.rows[11].cells[9].innerHTML = "RM" + (mffour8).toFixed(0);
    mffour9 = (nilai9 * mfr);
    stbl.rows[12].cells[9].innerHTML = "RM" + (mffour9).toFixed(0);
    mffour10 = (nilai10 * mfr);
    stbl.rows[13].cells[9].innerHTML = "RM" + (mffour10).toFixed(0);
    mffour11 = (nilai11 * mfr);
    stbl.rows[14].cells[9].innerHTML = "RM" + (mffour11).toFixed(0);
    mffour12 = (nilai12 * mfr);
    stbl.rows[15].cells[9].innerHTML = "RM" + (mffour12).toFixed(0);
    // Coloumn : MF 3.5% Year 5
    mffive1 = (nilai1 * mfr);
    stbl.rows[4].cells[10].innerHTML = "RM" + (mffive1).toFixed(0);
    mffive2 = (nilai2 * mfr);
    stbl.rows[5].cells[10].innerHTML = "RM" + (mffive2).toFixed(0);
    mffive3 = (nilai3 * mfr);
    stbl.rows[6].cells[10].innerHTML = "RM" + (mffive3).toFixed(0);
    mffive4 = (nilai4 * mfr);
    stbl.rows[7].cells[10].innerHTML = "RM" + (mffive4).toFixed(0);
    mffive5 = (nilai5 * mfr);
    stbl.rows[8].cells[10].innerHTML = "RM" + (mffive5).toFixed(0);
    mffive6 = (nilai6 * mfr);
    stbl.rows[9].cells[10].innerHTML = "RM" + (mffive6).toFixed(0);
    mffive7 = (nilai7 * mfr);
    stbl.rows[10].cells[10].innerHTML = "RM" + (mffive7).toFixed(0);
    mffive8 = (nilai8 * mfr);
    stbl.rows[11].cells[10].innerHTML = "RM" + (mffive8).toFixed(0);
    mffive9 = (nilai9 * mfr);
    stbl.rows[12].cells[10].innerHTML = "RM" + (mffive9).toFixed(0);
    mffive10 = (nilai10 * mfr);
    stbl.rows[13].cells[10].innerHTML = "RM" + (mffive10).toFixed(0);
    mffive11 = (nilai11 * mfr);
    stbl.rows[14].cells[10].innerHTML = "RM" + (mffive11).toFixed(0);
    mffive12 = (nilai12 * mfr);
    stbl.rows[15].cells[10].innerHTML = "RM" + (mffive12).toFixed(0);
    // Coloumn : MF Total Year 5
    mftotal1 = (mfone1 + mftwo1 + mft1 + mffour1 + mffive1);
    stbl.rows[4].cells[11].innerHTML = "RM" + (mftotal1).toFixed(0);
    mftotal2 = (mfone2 + mftwo2 + mft2 + mffour2 + mffive2);
    stbl.rows[5].cells[11].innerHTML = "RM" + (mftotal2).toFixed(0);
    mftotal3 = (mfone3 + mftwo3 + mft3 + mffour3 + mffive3);
    stbl.rows[6].cells[11].innerHTML = "RM" + (mftotal3).toFixed(0);
    mftotal4 = (mfone4 + mftwo4 + mft4 + mffour4 + mffive4);
    stbl.rows[7].cells[11].innerHTML = "RM" + (mftotal4).toFixed(0);
    mftotal5 = (mfone5 + mftwo5 + mft5 + mffour5 + mffive5);
    stbl.rows[8].cells[11].innerHTML = "RM" + (mftotal5).toFixed(0);
    mftotal6 = (mfone6 + mftwo6 + mft6 + mffour6 + mffive6);
    stbl.rows[9].cells[11].innerHTML = "RM" + (mftotal6).toFixed(0);
    mftotal7 = (mfone7 + mftwo7 + mft7 + mffour7 + mffive7);
    stbl.rows[10].cells[11].innerHTML = "RM" + (mftotal7).toFixed(0);
    mftotal8 = (mfone8 + mftwo8 + mft8 + mffour8 + mffive8);
    stbl.rows[11].cells[11].innerHTML = "RM" + (mftotal8).toFixed(0);
    mftotal9 = (mfone9 + mftwo9 + mft9 + mffour9 + mffive9);
    stbl.rows[12].cells[11].innerHTML = "RM" + (mftotal9).toFixed(0);
    mftotal10 = (mfone10 + mftwo10 + mft10 + mffour10 + mffive10);
    stbl.rows[13].cells[11].innerHTML = "RM" + (mftotal10).toFixed(0);
    mftotal11 = (mfone11 + mftwo11 + mft11 + mffour11 + mffive11);
    stbl.rows[14].cells[11].innerHTML = "RM" + (mftotal11).toFixed(0);
    mftotal12 = (mfone12 + mftwo12 + mft12 + mffour12 + mffive12);
    stbl.rows[15].cells[11].innerHTML = "RM" + (mftotal12).toFixed(0);
    // Coloumn : 9% new price on Gold Value
    np1 = (hg1 * qmBuyRM2027);
    stbl.rows[4].cells[12].innerHTML = "RM" + (np1).toFixed(2);
    np2 = (hg2 * qmBuyRM2027);
    stbl.rows[5].cells[12].innerHTML = "RM" + (np2).toFixed(2);
    np3 = (hg3 * qmBuyRM2027);
    stbl.rows[6].cells[12].innerHTML = "RM" + (np3).toFixed(2);
    np4 = (hg4 * qmBuyRM2027);
    stbl.rows[7].cells[12].innerHTML = "RM" + (np4).toFixed(2);
    np5 = (hg5 * qmBuyRM2027);
    stbl.rows[8].cells[12].innerHTML = "RM" + (np5).toFixed(2);
    np6 = (hg6 * qmBuyRM2027);
    stbl.rows[9].cells[12].innerHTML = "RM" + (np6).toFixed(2);
    np7 = (hg7 * qmBuyRM2027);
    stbl.rows[10].cells[12].innerHTML = "RM" + (np7).toFixed(2);
    np8 = (hg8 * qmBuyRM2027);
    stbl.rows[11].cells[12].innerHTML = "RM" + (np8).toFixed(2);
    np9 = (hg9 * qmBuyRM2027);
    stbl.rows[12].cells[12].innerHTML = "RM" + (np9).toFixed(2);
    np10 = (hg10 * qmBuyRM2027);
    stbl.rows[13].cells[12].innerHTML = "RM" + (np10).toFixed(2);
    np11 = (hg11 * qmBuyRM2027);
    stbl.rows[14].cells[12].innerHTML = "RM" + (np11).toFixed(2);
    np12 = (hg12 * qmBuyRM2027);
    stbl.rows[15].cells[12].innerHTML = "RM" + (np12).toFixed(2);
    // Coloumn : 9% new price on Gold Value
    gain1 = ((hb1 * qmBuyRM2027) - nilai1);
    stbl.rows[4].cells[13].innerHTML = "RM" + (gain1).toFixed(2);
    gain2 = ((hb2 * qmBuyRM2027) - nilai2);
    stbl.rows[5].cells[13].innerHTML = "RM" + (gain2).toFixed(2);
    gain3 = ((hb3 * qmBuyRM2027) - nilai3);
    stbl.rows[6].cells[13].innerHTML = "RM" + (gain3).toFixed(2);
    gain4 = ((hb4 * qmBuyRM2027) - nilai4);
    stbl.rows[7].cells[13].innerHTML = "RM" + (gain4).toFixed(2);
    gain5 = ((hb5 * qmBuyRM2027) - nilai5);
    stbl.rows[8].cells[13].innerHTML = "RM" + (gain5).toFixed(2);
    gain6 = ((hb6 * qmBuyRM2027) - nilai6);
    stbl.rows[9].cells[13].innerHTML = "RM" + (gain6).toFixed(2);
    gain7 = ((hb7 * qmBuyRM2027) - nilai7);
    stbl.rows[10].cells[13].innerHTML = "RM" + (gain7).toFixed(2);
    gain8 = ((hb8 * qmBuyRM2027) - nilai8);
    stbl.rows[11].cells[13].innerHTML = "RM" + (gain8).toFixed(2);
    gain9 = ((hb9 * qmBuyRM2027) - nilai9);
    stbl.rows[12].cells[13].innerHTML = "RM" + (gain9).toFixed(2);
    gain10 = ((hb10 * qmBuyRM2027) - nilai10);
    stbl.rows[13].cells[13].innerHTML = "RM" + (gain10).toFixed(2);
    gain11 = ((hb11 * qmBuyRM2027) - nilai11);
    stbl.rows[14].cells[13].innerHTML = "RM" + (gain11).toFixed(2);
    gain12 = ((hb12 * qmBuyRM2027) - nilai12);
    stbl.rows[15].cells[13].innerHTML = "RM" + (gain12).toFixed(2);
    // Coloumn : 9% + Gain
    tgain1 = ((np1 + gain1) - mftotal1);
    stbl.rows[4].cells[14].innerHTML = "RM" + (tgain1).toFixed(2);
    tgain2 = ((np2 + gain2) - mftotal2);
    stbl.rows[5].cells[14].innerHTML = "RM" + (tgain2).toFixed(2);
    tgain3 = ((np3 + gain3) - mftotal3);
    stbl.rows[6].cells[14].innerHTML = "RM" + (tgain3).toFixed(2);
    tgain4 = ((np4 + gain4) - mftotal4);
    stbl.rows[7].cells[14].innerHTML = "RM" + (tgain4).toFixed(2);
    tgain5 = ((np5 + gain5) - mftotal5);
    stbl.rows[8].cells[14].innerHTML = "RM" + (tgain5).toFixed(2);
    tgain6 = ((np6 + gain6) - mftotal6);
    stbl.rows[9].cells[14].innerHTML = "RM" + (tgain6).toFixed(2);
    tgain7 = ((np7 + gain7) - mftotal7);
    stbl.rows[10].cells[14].innerHTML = "RM" + (tgain7).toFixed(2);
    tgain8 = ((np8 + gain8) - mftotal8);
    stbl.rows[11].cells[14].innerHTML = "RM" + (tgain8).toFixed(2);
    tgain9 = ((np9 + gain9) - mftotal9);
    stbl.rows[12].cells[14].innerHTML = "RM" + (tgain9).toFixed(2);
    tgain10 = ((np10 + gain10) - mftotal10);
    stbl.rows[13].cells[14].innerHTML = "RM" + (tgain10).toFixed(2);
    tgain11 = ((np11 + gain11) - mftotal11);
    stbl.rows[14].cells[14].innerHTML = "RM" + (tgain11).toFixed(2);
    tgain12 = ((np12 + gain12) - mftotal12);
    stbl.rows[15].cells[14].innerHTML = "RM" + (tgain12).toFixed(2);


    stbl.rows[16].cells[1].innerHTML = "RM" + (sb1 + sb2 + sb3 + sb4 + sb5 + sb6 + sb7 + sb8 + sb9 + sb10 + sb11 + sb12);
    stbl.rows[16].cells[2].innerHTML = (hb1 + hb2 + hb3 + hb4 + hb5 + hb6 + hb7 + hb8 + hb9 + hb10 + hb11 + hb12).toFixed(4) + "g";
    stbl.rows[16].cells[3].innerHTML = "RM" + (nilai1 + nilai2 + nilai3 + nilai4 + nilai5 + nilai6 + nilai7 + nilai8 + nilai9 + nilai10 + nilai11 + nilai12);
    stbl.rows[16].cells[5].innerHTML = (hg1 + hg2 + hg3 + hg4 + hg5 + hg6 + hg7 + hg8 + hg9 + hg10 + hg11 + hg12).toFixed(4) + "g";
    stbl.rows[16].cells[14].innerHTML = "RM" + (tgain1 + tgain2 + tgain3 + tgain4 + tgain5 + tgain6 + tgain7 + tgain8 + tgain9 + tgain10 + tgain11 + tgain12).toFixed(2);

    const tblt = document.getElementById("tblt");
    tblt.rows[1].cells[0].innerHTML = "RM" + (sb1 + sb2 + sb3 + sb4 + sb5 + sb6 + sb7 + sb8 + sb9 + sb10 + sb11 + sb12).toFixed(2);
    tblt.rows[1].cells[1].innerHTML = "RM" + (nilai1);
    tblt.rows[1].cells[2].innerHTML = "RM" + (sb1 - nilai1);
    tblt.rows[1].cells[3].innerHTML = "RM" + (sb1 + sb2 + sb3 + sb4 + sb5 + sb6 + sb7 + sb8 + sb9 + sb10 + sb11 + sb12).toFixed(0);
    tblt.rows[1].cells[4].innerHTML = "RM" + (vfs1 + vfs2 + vfs3 + vfs4 + vfs5 + vfs6 + vfs7 + vfs8 + vfs9 + vfs10 + vfs11 + vfs12).toFixed(2);
    tblt.rows[3].cells[0].innerHTML = (nilai1) + "g";
    tblt.rows[3].cells[3].innerHTML = "RM" + (mftotal1 + mftotal2 + mftotal3 + mftotal4 + mftotal5 + mftotal6 + mftotal7 + mftotal8 + mftotal9 + mftotal10 + mftotal11 + mftotal12).toFixed(0);
    tblt.rows[3].cells[4].innerHTML = (hb1 + hb2 + hb3 + hb4 + hb5 + hb6 + hb7 + hb8 + hb9 + hb10 + hb11 + hb12).toFixed(4) + "g";

    const tblf = document.getElementById("tblf");
    tblf.rows[1].cells[1].innerHTML = "RM" + (sb1 - nilai1);
    tblf.rows[1].cells[3].innerHTML = "RM" + (tgain1 + tgain2 + tgain3 + tgain4 + tgain5 + tgain6 + tgain7 + tgain8 + tgain9 + tgain10 + tgain11 + tgain12).toFixed(2);
    tblf.rows[2].cells[1].innerHTML = "RM" + (sb1 - nilai1);
    tblf.rows[2].cells[3].innerHTML = "RM" + ((sb1 - nilai1) * 12).toFixed(2);
    tblf.rows[3].cells[3].innerHTML = "RM" + (((tgain1 + tgain2 + tgain3 + tgain4 + tgain5 + tgain6 + tgain7 + tgain8 + tgain9 + tgain10 + tgain11 + tgain12)) - ((sb1 - nilai1) * 12)).toFixed(2);


    // Console output
    console.log('https://nivesguru.in');
    console.log('https://anupammondal.in');
}

document.addEventListener('DOMContentLoaded', stepOne);